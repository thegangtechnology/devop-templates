.default-workflow: &default-workflow
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: $CI_COMMIT_TAG
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == "develop"'

.run-flake8:
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:${PYTHON_VERSION}
  before_script:
    - pip install flake8
  script:
    - flake8 --max-line-length 120

.run-sonarqube-python:
  image:
    name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/sonarsource/sonar-scanner-cli
  before_script:
    - if [ -z "$PROJECT_NAME" ]; then echo "PROJECT_NAME is undefined" & exit 1; fi
    - if [ -z "$SONAR_TOKEN" ]; then echo "SONAR_TOKEN is undefined" & exit 1; fi
  script:
    - sonar-scanner -Dsonar.projectKey=$PROJECT_NAME
      -Dsonar.python.coverage.reportPaths=coverage.xml
      -Dsonar.qualitygate.wait=true
      -Dsonar.exclusions="*.xml, **/migrations/**, **/__init__.py, **/*.html, **/settings/**, manage.py, **/wsgi.py, **/asgi.py, **/tests/**/*"
  variables:
    GIT_DEPTH: 0

.run-sonarqube-javascript:
  image:
    name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/sonarsource/sonar-scanner-cli
  before_script:
    - if [ -z "$PROJECT_NAME" ]; then echo "PROJECT_NAME is undefined" & exit 1; fi
    - if [ -z "$SONAR_TOKEN" ]; then echo "SONAR_TOKEN is undefined" & exit 1; fi
  script:
    - sonar-scanner -Dsonar.projectKey=$PROJECT_NAME
      -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      -Dsonar.qualitygate.wait=true
      -Dsonar.exclusions="*.config.js, **/*.spec.*"
  variables:
    GIT_DEPTH: 0

.pip-caching:
  cache:
    key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
    paths:
      - .cache/pip
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

.npm-caching:
  cache:
    key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
    untracked: true
    paths:
      - node_modules/
      - .nuxt/
      - .npm/
