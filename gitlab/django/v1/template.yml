include:
  remote: https://raw.githubusercontent.com/thegangtechnology/devop-templates/main/gitlab/common/v1/common.yml

image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:stable

services:
  - ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:dind
  - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/postgres:12.2-alpine
    alias: postgres

stages:
  - Lint
  - Tests
  - Static Test

variables:
  PYTHON_VERSION: "3.9"
  PROJECT_NAME: ""
  POSTGRES_DB: test_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: "postgres"
  POSTGRES_HOST_AUTH_METHOD: trust
  DATABASE_URL: postgres://postgres:postgres@postgres:5432/{$POSTGRES_DB}
  SONAR_TOKEN: "$SONAR_TOKEN"
  SONAR_HOST_URL: "https://sonarqube.dev.thegang.tech"

workflow:
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - if: $CI_COMMIT_TAG
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == "develop"'

lint:
  stage: Lint
  extends:
    - .run-pycodestyle

test-and-coverage:
  stage: Tests
  extends:
    - .pip-caching
  image:
    name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/python:${PYTHON_VERSION}
  before_script:
    - pip install pipenv
    - pip install coverage
    - pipenv lock -r > requirements.txt
    - pip install --no-cache-dir -r requirements.txt
  script:
    - coverage run manage.py test
    - coverage report -m
    - coverage xml
  rules:
    - when: on_success
      allow_failure: false
  artifacts:
        paths:
          - coverage.xml
        expire_in: 1 week

sonarqube:
  stage: Static Test
  dependencies:
    - test-and-coverage
  extends:
    - .run-sonarqube-python
